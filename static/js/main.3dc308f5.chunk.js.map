{"version":3,"sources":["stateDropDown.js","UpperDiv.js","OuterDiv.js","App.js","reportWebVitals.js","index.js"],"names":["StateDropDown","props","console","log","onChangeHandler","name","id","className","onChange","this","value","React","Component","UpperDiv","windowPrint","stateChangeHandler","isReturnFabricMaterialChangeHandler","onClick","placeholder","style","width","minHeight","htmlFor","type","rowSpan","MyTable","state","enableIGST","message","items","Description","Quantity","UnitCost","Total","sum","cGST","sGST","iGST","cGSTPercent","sGSTPercent","iGSTPercent","totalSum","float","paddingBottom","verticalAlign","handleClick","bind","renderRows","renderTableFooter","colSpan","nextProps","setState","context","map","o","i","total","toFixed","parseFloat","isNaN","getTax","handleItemChanged","handleItemChangedAndTotal","handleRemoveRow","key","event","updateItems","target","getTotal","push","splice","totalTax","percent","tax","unitCost","window","print","termAndCond","OuterDiv","e","currentSelectedState","businessState","clientState","checked","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3dc308f5.chunk.js","sourcesContent":["import React from \"react\";\r\nclass StateDropDown extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.onChangeHandler);\r\n        this.onChangeHandler = props.onChangeHandler;\r\n    }\r\n  \r\n    render(){\r\n        return(\r\n            <div>\r\n                <select name=\"state\" id=\"state\" className=\"form-control\" onChange={this.onChangeHandler}>\r\n                    <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                    <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                    <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\r\n                    <option value=\"Assam\">Assam</option>\r\n                    <option value=\"Bihar\">Bihar</option>\r\n                    <option value=\"Chandigarh\">Chandigarh</option>\r\n                    <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n                    <option value=\"Dadar and Nagar Haveli\">Dadar and Nagar Haveli</option>\r\n                    <option value=\"Daman and Diu\">Daman and Diu</option>\r\n                    <option value=\"Delhi\">Delhi</option>\r\n                    <option value=\"Lakshadweep\">Lakshadweep</option>\r\n                    <option value=\"Puducherry\">Puducherry</option>\r\n                    <option value=\"Goa\">Goa</option>\r\n                    <option value=\"Gujarat\">Gujarat</option>\r\n                    <option value=\"Haryana\">Haryana</option>\r\n                    <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\r\n                    <option value=\"Jharkhand\">Jharkhand</option>\r\n                    <option value=\"Karnataka\">Karnataka</option>\r\n                    <option value=\"Kerala\">Kerala</option>\r\n                    <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                    <option value=\"Maharashtra\">Maharashtra</option>\r\n                    <option value=\"Manipur\">Manipur</option>\r\n                    <option value=\"Meghalaya\">Meghalaya</option>\r\n                    <option value=\"Mizoram\">Mizoram</option>\r\n                    <option value=\"Nagaland\">Nagaland</option>\r\n                    <option value=\"Odisha\">Odisha</option>\r\n                    <option value=\"Punjab\">Punjab</option>\r\n                    <option value=\"Rajasthan\">Rajasthan</option>\r\n                    <option value=\"Sikkim\">Sikkim</option>\r\n                    <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n                    <option value=\"Telangana\">Telangana</option>\r\n                    <option value=\"Tripura\">Tripura</option>\r\n                    <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                    <option value=\"Uttarakhand\">Uttarakhand</option>\r\n                    <option value=\"West Bengal\">West Bengal</option>\r\n                    </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StateDropDown;","import React from \"react\";\r\nimport StateDropDown from \"./stateDropDown\";\r\nclass UpperDiv extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.windowPrint = props.windowPrint;\r\n    this.stateChangeHandler = props.stateChangeHandler;\r\n    this.isReturnFabricMaterialChangeHandler =\r\n      props.isReturnFabricMaterialChangeHandler;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tableWrapper\">\r\n        <div className=\"noPrint\">\r\n          <button onClick={this.windowPrint}>Print</button>\r\n        </div>\r\n        <h1>Nature Fabric Enterprises</h1>\r\n        <table className=\"tableClass\">\r\n          <caption className=\"xlargeFont\">\r\n            <strong>Tax Invoice</strong>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Invoice From</th>\r\n              <th>Invoice To</th>\r\n              <th>Customer Information</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <strong>Nature Fabric Enterprises</strong>\r\n                <p>H.no 3-158,</p>\r\n                <p>Opp Goshala, Ponnari Road,</p>\r\n                <p>Adilabad-500 401,</p>\r\n                <p>State: Telangana.</p>\r\n              </td>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <strong>\r\n                          <input placeholder=\"Company Name\" />\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <textarea\r\n                          style={{ width: \"100%\", minHeight: \"90px\" }}\r\n                        ></textarea>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <StateDropDown\r\n                          onChangeHandler={this.stateChangeHandler}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label htmlFor=\"mobileNum\">Reg. Mobile:</label>\r\n                        <input id=\"mobileNum\"></input>\r\n                      </td>\r\n                    </tr>\r\n                    <tr className=\"noprint\">\r\n                      <td>\r\n                        <label htmlFor=\"isReturnFabricMaterial\">\r\n                          Is Return Fabric Material?\r\n                        </label>\r\n                        <input\r\n                          id=\"isReturnFabricMaterial\"\r\n                          type=\"checkbox\"\r\n                          onChange={this.isReturnFabricMaterialChangeHandler}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n              <td rowSpan=\"2\">\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>Customer</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Order No.</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Invoice</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Billing Date:</th>\r\n                      <td>\r\n                        <input type=\"date\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>GSTIN:</th>\r\n                      <td>36CIVPS1288P3ZX</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>GSTIN:</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UpperDiv;\r\n","import React from \"react\";\r\nimport UpperDiv from \"./UpperDiv\";\r\nclass MyTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enableIGST: props.enableIGST,\r\n      message: \"\",\r\n      items: [\r\n        {\r\n          Description: \"\",\r\n          Quantity: \"\",\r\n          UnitCost: \"\",\r\n          Total: \"\",\r\n        },\r\n      ],\r\n      sum: 0.0,\r\n      cGST: 0.0,\r\n      sGST: 0.0,\r\n      iGST: 0.0,\r\n      cGSTPercent: props.cGSTPercent,\r\n      sGSTPercent: props.sGSTPercent,\r\n      iGSTPercent: props.iGSTPercent,\r\n      totalSum: 0.0,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tableWrapper\">\r\n        <table className=\"tableClass\">\r\n          <caption>\r\n            <div>\r\n              <div\r\n                className=\"textOnLeft largeFont inLineClass\"\r\n                style={{ float: \"left\", paddingBottom: \"10px\" }}\r\n              >\r\n                Invoice Breakup\r\n              </div>\r\n              <div\r\n                className=\"noPrint textOnRight inLineClass\"\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                  float: \"right\",\r\n                  paddingBottom: \"10px\",\r\n                }}\r\n              >\r\n                <button onClick={this.handleClick.bind(this)}>Add Item</button>\r\n              </div>\r\n            </div>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>S. No</th>\r\n              <th>Description</th>\r\n              <th>Quantity (KG)</th>\r\n              <th>Unit Cost</th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderRows()}</tbody>\r\n          {this.renderTableFooter()}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTableFooter() {\r\n    if (this.state.enableIGST) {\r\n      return (\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              Total\r\n            </td>\r\n            <td>{this.state.sum}</td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              IGST @{this.state.iGSTPercent}% on {this.state.sum}(+)\r\n            </td>\r\n            <td>{this.state.iGST}</td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              Grand Total:\r\n            </td>\r\n            <td>{this.state.totalSum}</td>\r\n          </tr>\r\n        </tfoot>\r\n      );\r\n    } else {\r\n      return (\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              CGST @{this.state.cGSTPercent}% on {this.state.sum}(+)\r\n            </td>\r\n            <td>{this.state.cGST}</td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              SGST @{this.state.sGSTPercent}% on {this.state.sum}(+)\r\n            </td>\r\n            <td>{this.state.sGST}</td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"4\" className=\"textOnRight\">\r\n              Grand Total:\r\n            </td>\r\n            <td>{this.state.totalSum}</td>\r\n          </tr>\r\n        </tfoot>\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.enableIGST !== this.state.enableIGST) {\r\n      this.setState({ enableIGST: nextProps.enableIGST });\r\n    }\r\n\r\n    this.setState({\r\n      cGSTPercent: nextProps.cGSTPercent,\r\n      iGSTPercent: nextProps.iGSTPercent,\r\n      sGSTPercent: nextProps.sGSTPercent,\r\n    });\r\n  }\r\n\r\n  renderRows() {\r\n    var context = this;\r\n    context.state.sum = 0.0;\r\n    return this.state.items.map(function (o, i) {\r\n      var total = o.UnitCost * o.Quantity;\r\n      context.state.items[i].Total = total.toFixed(2);\r\n      context.state.sum =\r\n        parseFloat(context.state.items[i].Total) +\r\n        parseFloat(isNaN(context.state.sum) ? 0.0 : context.state.sum);\r\n      if (context.state.enableIGST) {\r\n        context.state.cGST = 0;\r\n        context.state.sGST = 0;\r\n        context.state.iGST = context.getTax(\r\n          context.state.iGSTPercent,\r\n          context.state.sum\r\n        );\r\n      } else {\r\n        context.state.cGST = context.getTax(\r\n          context.state.cGSTPercent,\r\n          context.state.sum\r\n        );\r\n        context.state.sGST = context.getTax(\r\n          context.state.sGSTPercent,\r\n          context.state.sum\r\n        );\r\n        context.state.iGST = 0;\r\n      }\r\n      var totalSum =\r\n        context.state.sum +\r\n        context.state.cGST +\r\n        context.state.sGST +\r\n        context.state.iGST;\r\n      context.state.totalSum = parseFloat(totalSum.toFixed(2));\r\n      return (\r\n        <tr key={\"row-\" + i}>\r\n          <td key={\"cell-0-\" + i}>{i + 1}</td>\r\n          <td key={\"cell-1-\" + i}>\r\n            <input\r\n              type=\"text\"\r\n              value={o.Description}\r\n              onChange={context.handleItemChanged.bind(\r\n                context,\r\n                i,\r\n                \"Description\"\r\n              )}\r\n            />\r\n          </td>\r\n          <td key={\"cell-2-\" + i}>\r\n            <input\r\n              type=\"number\"\r\n              value={o.Quantity}\r\n              onChange={context.handleItemChangedAndTotal.bind(\r\n                context,\r\n                i,\r\n                \"Quantity\"\r\n              )}\r\n            />\r\n          </td>\r\n          <td key={\"cell-3-\" + i}>\r\n            <input\r\n              type=\"text\"\r\n              value={o.UnitCost}\r\n              onChange={context.handleItemChangedAndTotal.bind(\r\n                context,\r\n                i,\r\n                \"UnitCost\"\r\n              )}\r\n            />\r\n          </td>\r\n          <td key={\"cell-4-\" + i}>\r\n            <div>\r\n              {\" \"}\r\n              {o.Total}\r\n              <div className=\"noPrint inLineClass\">\r\n                <button onClick={context.handleRemoveRow.bind(context, i)}>\r\n                  Remove Row\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n  handleItemChanged(i, key, event) {\r\n    var items = this.updateItems(i, event.target.value, key);\r\n\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  }\r\n  handleItemChangedAndTotal(i, key, event) {\r\n    var items = this.updateItems(i, event.target.value, key);\r\n    var total = this.getTotal(items[i].UnitCost, items[i].Quantity);\r\n    total = total != null ? total : 0.0;\r\n    items[i].Total = total;\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  }\r\n  handleClick() {\r\n    var items = this.state.items;\r\n    var item = {\r\n      Description: \"\",\r\n      Quantity: \"\",\r\n      UnitCost: \"\",\r\n      Total: 0,\r\n    };\r\n    items.push(item);\r\n    this.setState({\r\n      items: items,\r\n      sum: this.state.sum,\r\n      cGST: this.state.cGST,\r\n      sGST: this.state.sGST,\r\n      totalSum: this.state.totalSum,\r\n    });\r\n  }\r\n  handleRemoveRow(i) {\r\n    var items = this.state.items;\r\n\r\n    items.splice(i, 1);\r\n    this.setState({\r\n      items: items,\r\n      sum: this.state.sum,\r\n      cGST: this.state.cGST,\r\n      sGST: this.state.sGST,\r\n      totalSum: this.state.totalSum,\r\n    });\r\n  }\r\n  updateItems(i, value, key) {\r\n    var items = this.state.items;\r\n    items[i][key] = value;\r\n    return items;\r\n  }\r\n  resetSums() {\r\n    this.state.sum = 0.0;\r\n    this.state.totalTax = 0.0;\r\n  }\r\n  getTax(percent, sum) {\r\n    var tax = (sum * percent) / 100;\r\n    tax = tax.toFixed(2);\r\n    return parseFloat(tax);\r\n  }\r\n  getGrandTotal() {\r\n    return this.state.tax + this.state.sum;\r\n  }\r\n  getTotal(unitCost, Quantity) {\r\n    if (unitCost != \"\" && Quantity != \"\") {\r\n      return parseFloat(unitCost) * Quantity;\r\n    }\r\n  }\r\n}\r\nfunction windowPrint() {\r\n  window.print();\r\n}\r\n\r\nvar termAndCond = (\r\n  <div>\r\n    <h3>Terms And Conditions</h3>\r\n    <ol>\r\n      <li>Cheques to be in favour of \"Nature fabric enterprieses.</li>\r\n      <li>\r\n        For any change in service or service address etc..,please inform at the\r\n        time of upcoming order.\r\n      </li>\r\n      <li>All the Amounts and Taxes shown are in Indian Rupees.</li>\r\n    </ol>\r\n  </div>\r\n);\r\n\r\nclass OuterDiv extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businessState: \"Telangana\",\r\n      clientState: \"\",\r\n      enableIGST: true,\r\n      sGSTPercent: 6,\r\n      cGSTPercent: 6,\r\n      iGSTPercent: 12,\r\n    };\r\n  }\r\n  stateChangeHandler = (e) => {\r\n    console.log(e);\r\n    console.log(e.target.value);\r\n    const currentSelectedState = e.target.value;\r\n    let enableIGST = true;\r\n    if (this.state.businessState === currentSelectedState) {\r\n      enableIGST = false;\r\n    }\r\n    this.setState({\r\n      clientState: e.target.value,\r\n      enableIGST: enableIGST,\r\n    });\r\n  };\r\n\r\n  isReturnFabricMaterialChangeHandler = (e) => {\r\n    const isSelected = e.target.checked;\r\n    if (isSelected) {\r\n      this.setState({\r\n        sGSTPercent: 6,\r\n        cGSTPercent: 6,\r\n        iGSTPercent: 12,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sGSTPercent: 9,\r\n        cGSTPercent: 9,\r\n        iGSTPercent: 18,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"outerDiv\">\r\n        <UpperDiv\r\n          windowPrint={windowPrint}\r\n          stateChangeHandler={this.stateChangeHandler}\r\n          isReturnFabricMaterialChangeHandler={\r\n            this.isReturnFabricMaterialChangeHandler\r\n          }\r\n        />\r\n        <MyTable\r\n          enableIGST={this.state.enableIGST}\r\n          sGSTPercent={this.state.sGSTPercent}\r\n          cGSTPercent={this.state.cGSTPercent}\r\n          iGSTPercent={this.state.iGSTPercent}\r\n        />\r\n        {termAndCond}\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    const currentSelectedState = document.getElementById(\"state\").value;\r\n    let enableIGST = true;\r\n    if (this.state.businessState === currentSelectedState) {\r\n      enableIGST = false;\r\n    }\r\n    this.setState({\r\n      clientState: currentSelectedState,\r\n      enableIGST: enableIGST,\r\n    });\r\n  }\r\n}\r\nexport default OuterDiv;\r\n","import './App.css';\r\nimport './OuterDiv';\r\nimport OuterDiv from './OuterDiv';\r\n\r\nfunction App() {\r\n  return (\r\n    <OuterDiv/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}