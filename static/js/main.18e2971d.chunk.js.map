{"version":3,"sources":["stateDropDown.js","UpperDiv.js","OuterDiv.js","App.js","reportWebVitals.js","index.js"],"names":["StateDropDown","props","console","log","onChangeHandler","name","id","className","onChange","this","value","React","Component","UpperDiv","windowPrint","stateChangeHandler","isReturnFabricMaterialChangeHandler","onClick","placeholder","style","width","minHeight","htmlFor","type","rowSpan","MyTable","state","enableIGST","message","items","Description","Quantity","UnitCost","Total","sum","cGST","sGST","iGST","cGSTPercent","sGSTPercent","iGSTPercent","totalSum","float","paddingBottom","verticalAlign","handleClick","bind","renderRows","renderTableFooter","colSpan","nextProps","setState","context","map","o","i","total","toFixed","parseFloat","isNaN","getTax","handleItemChanged","handleItemChangedAndTotal","handleRemoveRow","key","event","updateItems","target","getTotal","push","splice","totalTax","percent","tax","unitCost","window","print","termAndCond","OuterDiv","e","currentSelectedState","businessState","clientState","checked","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18e2971d.chunk.js","sourcesContent":["import React from \"react\";\r\nclass StateDropDown extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.onChangeHandler);\r\n        this.onChangeHandler = props.onChangeHandler;\r\n    }\r\n  \r\n    render(){\r\n        return(\r\n            <div>\r\n                <select name=\"state\" id=\"state\" className=\"form-control\" onChange={this.onChangeHandler}>\r\n                    <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                    <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                    <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\r\n                    <option value=\"Assam\">Assam</option>\r\n                    <option value=\"Bihar\">Bihar</option>\r\n                    <option value=\"Chandigarh\">Chandigarh</option>\r\n                    <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n                    <option value=\"Dadar and Nagar Haveli\">Dadar and Nagar Haveli</option>\r\n                    <option value=\"Daman and Diu\">Daman and Diu</option>\r\n                    <option value=\"Delhi\">Delhi</option>\r\n                    <option value=\"Lakshadweep\">Lakshadweep</option>\r\n                    <option value=\"Puducherry\">Puducherry</option>\r\n                    <option value=\"Goa\">Goa</option>\r\n                    <option value=\"Gujarat\">Gujarat</option>\r\n                    <option value=\"Haryana\">Haryana</option>\r\n                    <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\r\n                    <option value=\"Jharkhand\">Jharkhand</option>\r\n                    <option value=\"Karnataka\">Karnataka</option>\r\n                    <option value=\"Kerala\">Kerala</option>\r\n                    <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                    <option value=\"Maharashtra\">Maharashtra</option>\r\n                    <option value=\"Manipur\">Manipur</option>\r\n                    <option value=\"Meghalaya\">Meghalaya</option>\r\n                    <option value=\"Mizoram\">Mizoram</option>\r\n                    <option value=\"Nagaland\">Nagaland</option>\r\n                    <option value=\"Odisha\">Odisha</option>\r\n                    <option value=\"Punjab\">Punjab</option>\r\n                    <option value=\"Rajasthan\">Rajasthan</option>\r\n                    <option value=\"Sikkim\">Sikkim</option>\r\n                    <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n                    <option value=\"Telangana\">Telangana</option>\r\n                    <option value=\"Tripura\">Tripura</option>\r\n                    <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                    <option value=\"Uttarakhand\">Uttarakhand</option>\r\n                    <option value=\"West Bengal\">West Bengal</option>\r\n                    </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StateDropDown;","import React from \"react\";\r\nimport StateDropDown from \"./stateDropDown\";\r\nclass UpperDiv extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.windowPrint = props.windowPrint;\r\n    this.stateChangeHandler = props.stateChangeHandler;\r\n    this.isReturnFabricMaterialChangeHandler =\r\n      props.isReturnFabricMaterialChangeHandler;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tableWrapper\">\r\n        <div className=\"noPrint\">\r\n          <button onClick={this.windowPrint}>Print</button>\r\n        </div>\r\n        <h1>Nature Fabric Enterprises</h1>\r\n        <table className=\"tableClass\">\r\n          <caption className=\"xlargeFont\">\r\n            <strong>Tax Invoice</strong>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Invoice From</th>\r\n              <th>Invoice To</th>\r\n              <th>Customer Information</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <strong>Nature Fabric Enterprises</strong>\r\n                <p>H.no 3-158,</p>\r\n                <p>Opp Goshala, Ponnari Road,</p>\r\n                <p>Adilabad-500 401,</p>\r\n                <p>State: Telangana.</p>\r\n              </td>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <strong>\r\n                          <input placeholder=\"Company Name\" />\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <textarea\r\n                          style={{ width: \"100%\", minHeight: \"90px\" }}\r\n                        ></textarea>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <StateDropDown\r\n                          onChangeHandler={this.stateChangeHandler}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label htmlFor=\"mobileNum\">Reg. Mobile:</label>\r\n                        <input id=\"mobileNum\"></input>\r\n                      </td>\r\n                    </tr>\r\n                    <tr className=\"noprint\">\r\n                      <td>\r\n                        <label htmlFor=\"isReturnFabricMaterial\">\r\n                          Is Return Fabric Material?\r\n                        </label>\r\n                        <input\r\n                          id=\"isReturnFabricMaterial\"\r\n                          type=\"checkbox\"\r\n                          onChange={this.isReturnFabricMaterialChangeHandler}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n              <td rowSpan=\"2\">\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>Customer</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Order No.</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Invoice</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Billing Date:</th>\r\n                      <td>\r\n                        <input type=\"date\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>GSTIN:</th>\r\n                      <td>36CIVPS1288P3ZX</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>GSTIN:</th>\r\n                      <td>\r\n                        <input type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UpperDiv;\r\n","import React from 'react';\r\nimport UpperDiv from './UpperDiv';\r\nclass MyTable extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        enableIGST: props.enableIGST,\r\n        message: \"\",\r\n        items: [\r\n            {\r\n                Description:'',\r\n                Quantity: '',\r\n                UnitCost: '',\r\n                Total: ''\r\n            }\r\n            \r\n        ],\r\n        sum: 0.00,\r\n        cGST: 0.00,\r\n        sGST: 0.00,\r\n        iGST: 0.00,\r\n        cGSTPercent: 9,\r\n        sGSTPercent: 9,\r\n        iGSTPercent: 18,\r\n        totalSum: 0.00\r\n        }\r\n    }\r\n    render(){\r\n        return(<div className=\"tableWrapper\">\r\n            <table className =\"tableClass\">\r\n                <caption >\r\n                    <div>\r\n                    <div className=\"textOnLeft largeFont inLineClass\" style={{float:\"left\",paddingBottom:\"10px\"}}>Invoice Breakup</div><div className=\"noPrint textOnRight inLineClass\" style={{verticalAlign:\"middle\",float:\"right\",paddingBottom:\"10px\"}}>\r\n                            <button onClick={this.handleClick.bind(this)}>\r\n                                Add Item\r\n                            </button>\r\n                             </div>\r\n                    </div>\r\n                    </caption>\r\n            <thead>\r\n                <tr>\r\n                <th>S. No</th>\r\n                <th>Description</th>\r\n                <th>Quantity (KG)</th>\r\n                <th>Unit Cost</th>\r\n                <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.renderRows()}\r\n            </tbody>\r\n            {this.renderTableFooter()}\r\n            </table>\r\n        </div>);\r\n    }\r\n\r\n    renderTableFooter(){\r\n        if(this.state.enableIGST){\r\n            return (\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">Total</td>\r\n                        <td>{this.state.sum}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">IGST @{this.state.iGSTPercent}% on {this.state.sum}(+)</td>\r\n                        <td>{this.state.iGST}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">Grand Total:</td>\r\n                        <td>{this.state.totalSum}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            );\r\n        }else{\r\n            return (\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">CGST @{this.state.cGSTPercent}% on {this.state.sum}(+)</td>\r\n                        <td>{this.state.cGST}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">SGST @{this.state.sGSTPercent}% on {this.state.sum}(+)</td>\r\n                        <td>{this.state.sGST}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"textOnRight\">Grand Total:</td>\r\n                        <td>{this.state.totalSum}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.enableIGST !== this.state.enableIGST) {\r\n            this.setState({ enableIGST: nextProps.enableIGST });\r\n        }\r\n    }\r\n\r\n    renderRows(){\r\n        var context = this;\r\n        context.state.sum = 0.00;\r\n        return this.state.items.map(function(o,i){\r\n            var total = o.UnitCost * o.Quantity;\r\n            context.state.items[i].Total = total.toFixed(2);\r\n            context.state.sum = parseFloat(context.state.items[i].Total) + parseFloat(isNaN(context.state.sum)?0.00:context.state.sum);\r\n            if(context.state.enableIGST){\r\n                context.state.cGST = 0;\r\n                context.state.sGST = 0;\r\n                context.state.iGST = context.getTax(context.state.iGSTPercent, context.state.sum);\r\n            }else{\r\n                context.state.cGST = context.getTax(context.state.cGSTPercent, context.state.sum);\r\n                context.state.sGST = context.getTax(context.state.sGSTPercent, context.state.sum);\r\n                context.state.iGST = 0;\r\n            }\r\n            var totalSum = context.state.sum + context.state.cGST + context.state.sGST + context.state.iGST;\r\n            context.state.totalSum = parseFloat(totalSum.toFixed(2));\r\n            return (\r\n            <tr key={\"row-\"+i}>\r\n                <td key={\"cell-0-\"+i}>\r\n                {i+1}\r\n                </td>\r\n                <td key={\"cell-1-\"+i}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={o.Description}\r\n                    onChange={context.handleItemChanged.bind(context, i, \"Description\")}\r\n                    />\r\n                </td>\r\n                <td key={\"cell-2-\"+i}>\r\n                    <input\r\n                    type=\"number\"\r\n                    value={o.Quantity}\r\n                    onChange={context.handleItemChangedAndTotal.bind(context, i, \"Quantity\")}\r\n                    />\r\n                </td>\r\n                <td key={\"cell-3-\"+i}>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={o.UnitCost}\r\n                    onChange={context.handleItemChangedAndTotal.bind(context, i, \"UnitCost\")}\r\n                    />\r\n                </td>\r\n                <td key={\"cell-4-\"+i}>\r\n                <div> {o.Total}<div className=\"noPrint inLineClass\"><button onClick={context.handleRemoveRow.bind(context, i)}>Remove Row</button></div></div>\r\n                </td>\r\n            </tr>\r\n        )\r\n        });\r\n    }\r\n    handleItemChanged(i, key, event){\r\n        var items = this.updateItems(i,event.target.value, key);\r\n\r\n        this.setState({\r\n            items: items,\r\n        });\r\n        \r\n    }\r\n    handleItemChangedAndTotal(i, key, event){\r\n        var items = this.updateItems(i,event.target.value, key);\r\n        var total = this.getTotal(items[i].UnitCost,items[i].Quantity);\r\n        total = total!=null?total:0.00;\r\n        items[i].Total = total;\r\n        this.setState({\r\n            items: items\r\n        });\r\n        \r\n    }\r\n    handleClick(){\r\n        var items = this.state.items;\r\n        var item = {\r\n                Description:'',\r\n                Quantity: '',\r\n                UnitCost: '',\r\n                Total: 0\r\n            }\r\n        items.push(item);\r\n        this.setState({\r\n            items: items,\r\n            sum: this.state.sum,\r\n            cGST: this.state.cGST,\r\n            sGST: this.state.sGST,\r\n            totalSum: this.state.totalSum\r\n        });\r\n    }\r\n    handleRemoveRow(i){\r\n        var items = this.state.items;\r\n\r\n        items.splice(i, 1);\r\n        this.setState({\r\n            items: items,\r\n            sum: this.state.sum,\r\n            cGST: this.state.cGST,\r\n            sGST: this.state.sGST,\r\n            totalSum: this.state.totalSum\r\n        });\r\n    }\r\n    updateItems(i, value, key){\r\n        var items = this.state.items;\r\n        items[i][key] = value;\r\n        return items;\r\n    }\r\n    resetSums(){\r\n        this.state.sum = 0.00;\r\n        this.state.totalTax = 0.00;\r\n    }\r\n    getTax(percent, sum){\r\n        var tax = sum*percent/100;\r\n        tax = tax.toFixed(2);\r\n        return parseFloat(tax);\r\n    }\r\n    getGrandTotal(){\r\n        return (this.state.tax + this.state.sum);\r\n    }\r\n    getTotal(unitCost, Quantity){\r\n        if(unitCost!='' && Quantity!=''){\r\n            return parseFloat(unitCost)*Quantity;\r\n        }\r\n    }\r\n}\r\nfunction windowPrint(){\r\n    window.print();\r\n}\r\n\r\n\r\n\r\nvar termAndCond = (\r\n    <div>\r\n        <h3>Terms And Conditions\r\n        </h3>\r\n        <ol>\r\n            <li>\r\n                Cheques to be in favour of \"Nature fabric enterprieses.\r\n            </li>\r\n            <li>\r\n                For any change in service or service address etc..,please inform at the time of upcoming order.\r\n            </li>\r\n            <li>\r\n                All the Amounts and Taxes shown are in Indian Rupees.\r\n            </li>\r\n        </ol>\r\n    </div>\r\n);\r\n\r\nclass OuterDiv extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            businessState: 'Telangana',\r\n            clientState: '',\r\n            enableIGST: true\r\n        }\r\n    }\r\n    stateChangeHandler = (e) =>{\r\n        console.log(e);\r\n        console.log(e.target.value);\r\n        const currentSelectedState = e.target.value;\r\n        let enableIGST = true;\r\n        if(this.state.businessState === currentSelectedState){\r\n            enableIGST = false;\r\n        }\r\n        this.setState(\r\n            {\r\n                clientState: e.target.value,\r\n                enableIGST: enableIGST\r\n            }\r\n        );\r\n    }\r\n\r\n    isReturnFabricMaterialChangeHandler = (e) => {\r\n        const isSelected = e.target.checked;\r\n        if(isSelected){\r\n            this.setState({\r\n                sGSTPercent: 6,\r\n                cGSTPercent: 6,\r\n                iGSTPercent: 12\r\n            });\r\n        }else{\r\n            this.setState({\r\n                sGSTPercent: 9,\r\n                cGSTPercent: 9,\r\n                iGSTPercent: 18\r\n            });\r\n        }\r\n    }\r\n     render(){\r\n        return (<div className=\"outerDiv\">\r\n            <UpperDiv windowPrint={windowPrint} stateChangeHandler={this.stateChangeHandler} isReturnFabricMaterialChangeHandler={this.isReturnFabricMaterialChangeHandler}/>\r\n            <MyTable enableIGST={this.state.enableIGST}/>\r\n            {termAndCond}\r\n            </div>\r\n        );\r\n     }\r\n     componentDidMount(){\r\n        const currentSelectedState = document.getElementById('state').value;\r\n        let enableIGST = true;\r\n        if(this.state.businessState === currentSelectedState){\r\n            enableIGST = false;\r\n        }\r\n        this.setState({\r\n            clientState: currentSelectedState,\r\n            enableIGST: enableIGST\r\n        });\r\n     }\r\n}\r\nexport default OuterDiv;\r\n","import './App.css';\r\nimport './OuterDiv';\r\nimport OuterDiv from './OuterDiv';\r\n\r\nfunction App() {\r\n  return (\r\n    <OuterDiv/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}